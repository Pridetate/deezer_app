{"version":3,"sources":["components/header/Header.jsx","components/details/Details.jsx","components/cardTemplate/CardTemplate.jsx","context/Context.js","components/search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","useStyles","makeStyles","theme","dialogPaper","height","Details","open","onClose","data","classes","useState","tracklist","setTracklist","albumData","setAlbumData","useEffect","fetchAlbum","a","albumString","album","id","toString","response","fetch","method","headers","Accept","json","result","console","log","fetchTracks","tracklistTopFifty","artist","tracklistTopFive","substring","length","Dialog","fullWidth","paper","DialogTitle","style","width","marginLeft","Grid","container","spacing","item","Card","CardActionArea","CardMedia","image","picture","alt","CardContent","map","track","index","justifyContent","flexDirection","gutterBottom","color","title","duration","cover","release_date","Button","onClick","CardTemplate","openDetails","setOpenDetails","alert","Box","name","rank","artistContext","createContext","Search","searchText","setSearchText","setArtist","useContext","handleSearch","TextField","label","type","value","onChange","event","target","InputProps","startAdornment","InputAdornment","App","Provider","mt","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9705821d.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nconst Header = () => {\n  return (\n    <AppBar position='static'>\n      <Container maxWidth='xl'>\n        <Toolbar disableGutters>\n          <Typography\n            variant='h6'\n            noWrap\n            component='div'\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            Deezer\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    height: '800px',\n  },\n}));\n\nconst Details = ({ open, onClose, data }) => {\n  const classes = useStyles();\n  const [tracklist, setTracklist] = useState([]);\n  const [albumData, setAlbumData] = useState([]);\n\n  useEffect(() => {\n    const fetchAlbum = async () => {\n      try {\n        let albumString = data.album.id.toString();\n        const response = fetch(\n          'https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/' +\n            albumString,\n          {\n            method: 'get',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const result = await (await response).json();\n        console.log(result);\n        setAlbumData(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchTracks = async () => {\n      let tracklistTopFifty = data.artist.tracklist;\n      let tracklistTopFive =\n        tracklistTopFifty.substring(0, tracklistTopFifty.length - 2) + '5';\n      try {\n        const response = fetch(\n          'https://cors-anywhere.herokuapp.com/' + tracklistTopFive,\n          {\n            method: 'get',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const result = await (await response).json();\n        setTracklist(result.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (data) {\n      fetchTracks();\n    }\n    if (data) {\n      fetchAlbum();\n    }\n  }, [data]);\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullWidth={true}\n      maxWidth='lg'\n      aria-labelledby='modal-modal-title'\n      aria-describedby='modal-modal-description'\n      classes={{ paper: classes.dialogPaper }}\n    >\n      <DialogTitle>Artist Details</DialogTitle>\n      <div style={{ width: '80%', marginLeft: '10%' }}>\n        <Grid container spacing={2}>\n          <Grid item xs={2}></Grid>\n          <Grid item xs={6}>\n            <Card sx={{ maxWidth: 345 }}>\n              {data ? (\n                <CardActionArea>\n                  <CardMedia\n                    component='img'\n                    height='140'\n                    image={data.artist.picture}\n                    alt='green iguana'\n                  />\n                  <CardContent></CardContent>\n                </CardActionArea>\n              ) : null}\n            </Card>\n          </Grid>\n          <Grid item xs={4}>\n            {tracklist &&\n              tracklist.map((track, index) => {\n                return (\n                  <Box\n                    key={track.id}\n                    style={{\n                      justifyContent: 'space-between',\n                      display: 'flex',\n                      flexDirection: 'row',\n                    }}\n                  >\n                    <Box\n                      style={{\n                        justifyContent: 'left',\n                        display: 'flex',\n                        flexDirection: 'row',\n                      }}\n                    >\n                      <Typography gutterBottom variant='h5' component='div'>\n                        {index + 1}.\n                      </Typography>\n                      <Typography variant='h5' color='text.secondary'>\n                        {track.title}\n                      </Typography>\n                    </Box>\n                    <Typography variant='h5' color='text.secondary'>\n                      {track.duration}\n                    </Typography>\n                  </Box>\n                );\n              })}\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n              <Typography>Albums</Typography>\n            </Grid>\n            <Grid item xs={1}></Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={1}></Grid>\n\n            {tracklist &&\n              tracklist.map((track, index) => {\n                return (\n                  <Grid key={track.id} item xs={2}>\n                    <Card sx={{ maxWidth: 345 }}>\n                      <CardActionArea>\n                        <CardMedia\n                          component='img'\n                          height='140'\n                          image={track.album.cover}\n                          alt='green iguana'\n                        />\n                        <CardContent>\n                          <Box>\n                            <Typography\n                              gutterBottom\n                              variant='h5'\n                              component='div'\n                            >\n                              {track.album.title}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              {albumData && albumData.release_date\n                                ? albumData.release_date.substring(0, 4)\n                                : 'no date'}\n                            </Typography>\n                          </Box>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            <Grid item xs={1}></Grid>\n          </Grid>\n        </Grid>\n      </div>\n\n      <Button onClick={onClose}>Close</Button>\n    </Dialog>\n  );\n};\n\nexport default Details;\n","import React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Details from '../details/Details';\n\nconst CardTemplate = ({ item }) => {\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n  useEffect(() => {}, [item]);\n\n  return (\n    <>\n      <Card\n        sx={{ maxWidth: 345 }}\n        onClick={() => {\n          setOpenDetails(true);\n          alert('opening');\n        }}\n      >\n        {item ? (\n          <CardActionArea>\n            <CardMedia\n              component='img'\n              height='140'\n              image={item.artist.picture}\n              alt='green iguana'\n            />\n            <CardContent>\n              <Box\n                style={{\n                  justifyContent: 'space-between',\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <Typography gutterBottom variant='h5' component='div'>\n                  Artist\n                </Typography>\n                <Typography variant='body2' color='text.secondary'>\n                  {item.artist.name}\n                </Typography>\n              </Box>\n              <Box\n                style={{\n                  justifyContent: 'space-between',\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <Typography gutterBottom variant='h5' component='div'>\n                  Fans\n                </Typography>\n                <Typography variant='body2' color='text.secondary'>\n                  {item.rank > 1000\n                    ? item.rank\n                        .toString()\n                        .substring(0, item.rank.toString().length - 3) + 'K'\n                    : item.rank}\n                </Typography>\n              </Box>\n            </CardContent>\n          </CardActionArea>\n        ) : null}\n      </Card>\n      <Details open={openDetails} onClose={handleCloseDetails} data={item} />\n    </>\n  );\n};\n\nexport default CardTemplate;\n","import { createContext } from 'react';\n\nexport const artistContext = createContext({});\n","import React, { useContext, useEffect, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment } from '@mui/material';\nimport { artistContext } from '../../context/Context';\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState('');\n\n  const { setArtist } = useContext(artistContext);\n  const handleTextChange = (event) => {\n    setSearchText(event.target.value);\n  };\n  const handleSearch = async () => {\n    try {\n      const response = fetch(\n        'https://cors-anywhere.herokuapp.com/https://api.deezer.com/search?q=' +\n          searchText,\n        {\n          method: 'get',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const result = await (await response).json();\n      setArtist(result.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {}, []);\n  return (\n    <div>\n      <TextField\n        id='filled-search'\n        label='Search field'\n        type='search'\n        variant='outlined'\n        value={searchText}\n        onChange={handleTextChange}\n        fullWidth\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position='start'>\n              <SearchIcon onClick={handleSearch} />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import Header from './components/header/Header';\nimport CardTemplate from './components/cardTemplate/CardTemplate';\nimport Search from './components/search/Search';\nimport Grid from '@mui/material/Grid';\nimport { artistContext } from './context/Context';\nimport { useState } from 'react';\n\nfunction App() {\n  const [artist, setArtist] = useState([]);\n  return (\n    <artistContext.Provider value={{ artist, setArtist }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Header />\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} mt={1}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={2}></Grid>\n        <Grid item xs={6}>\n          <Search />\n        </Grid>\n        <Grid item xs={2}></Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n\n      {artist && artist.length > 0\n        ? artist.slice(0, 5).map((item) => {\n            return (\n              <Grid container spacing={2} mt={1}>\n                <Grid item xs={1} md={0}></Grid>\n                <Grid item xs={10} md={2}>\n                  <CardTemplate item={item} />\n                </Grid>\n                <Grid item xs={1} md={0}></Grid>\n              </Grid>\n            );\n          })\n        : null}\n    </artistContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}