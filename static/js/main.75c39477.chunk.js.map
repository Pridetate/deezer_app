{"version":3,"sources":["components/header/Header.jsx","components/details/Details.jsx","components/cardTemplate/CardTemplate.jsx","context/Context.js","spinner/LoadingSpinner.js","components/search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Grid","container","spacing","item","xs","Typography","title","className","variant","component","useStyles","makeStyles","theme","dialogPaper","height","Details","open","onClose","data","classes","useState","tracklist","setTracklist","albumData","setAlbumData","useEffect","fetchAlbum","a","albumString","album","id","toString","response","fetch","method","headers","Accept","json","result","console","log","fetchTracks","tracklistTopFifty","artist","tracklistTopFive","substring","length","Dialog","fullWidth","paper","style","justifyContent","alignItems","color","fontSize","width","marginLeft","marginBottom","mt","md","gutterBottom","Card","sx","CardActionArea","CardMedia","image","picture","alt","CardContent","map","track","index","display","flexDirection","duration","cover","whiteSpace","overflow","textOverflow","release_date","Button","onClick","CardTemplate","openDetails","setOpenDetails","Box","name","rank","artistContext","createContext","LoadingSpinner","viewBox","offset","d","fill","attributeName","type","from","to","dur","repeatCount","Search","searchText","setSearchText","loading","setLoading","setArtist","useContext","handleSearch","TextField","label","placeholder","value","onChange","event","target","InputProps","startAdornment","InputAdornment","cursor","App","Provider","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75c39477.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\n\nconst Header = () => {\n  return (\n    <AppBar position='static'>\n      <Container maxWidth='xl'>\n        <Toolbar disableGutters>\n          <Grid container spacing={2}>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={4}>\n              <Typography\n                title='header'\n                className='header'\n                variant='h6'\n                component='div'\n              >\n                Deezer\n              </Typography>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    height: '800px',\n  },\n}));\n\nconst Details = ({ open, onClose, data }) => {\n  const classes = useStyles();\n  const [tracklist, setTracklist] = useState([]);\n  const [albumData, setAlbumData] = useState([]);\n\n  useEffect(() => {\n    const fetchAlbum = async () => {\n      try {\n        let albumString = data.album.id.toString();\n        const response = fetch(\n          'https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/' +\n            albumString,\n          {\n            method: 'get',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const result = await (await response).json();\n        console.log(result);\n        setAlbumData(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchTracks = async () => {\n      let tracklistTopFifty = data.artist.tracklist;\n      let tracklistTopFive =\n        tracklistTopFifty.substring(0, tracklistTopFifty.length - 2) + '5';\n      try {\n        const response = fetch(\n          'https://cors-anywhere.herokuapp.com/' + tracklistTopFive,\n          {\n            method: 'get',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const result = await (await response).json();\n        setTracklist(result.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (data) {\n      fetchTracks();\n    }\n    if (data) {\n      fetchAlbum();\n    }\n  }, [data]);\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullWidth={true}\n      maxWidth='lg'\n      aria-labelledby='modal-modal-title'\n      aria-describedby='modal-modal-description'\n      classes={{ paper: classes.dialogPaper }}\n    >\n      {' '}\n      <Grid container spacing={2}>\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <div style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <Typography style={{ color: 'black', fontSize: 25 }}>\n              Artist Details\n            </Typography>\n          </div>\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n      <div style={{ width: '80%', marginLeft: '10%', marginBottom: 20 }}>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={8} md={8}>\n            <Typography\n              gutterBottom\n              variant='h6'\n              component='div'\n              style={{ color: 'blue', fontSize: 'bold' }}\n            ></Typography>\n            <Card sx={{ maxWidth: 345 }}>\n              {data ? (\n                <CardActionArea>\n                  <CardMedia\n                    component='img'\n                    height='180'\n                    image={data.artist.picture}\n                    alt='green iguana'\n                  />\n                  <CardContent></CardContent>\n                </CardActionArea>\n              ) : null}\n            </Card>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography\n              gutterBottom\n              variant='h6'\n              component='div'\n              style={{ color: 'blue', fontSize: 'bold' }}\n            >\n              Top Tracks\n            </Typography>\n            {tracklist &&\n              tracklist.map((track, index) => {\n                return (\n                  <Box\n                    key={track.id}\n                    style={{\n                      justifyContent: 'space-between',\n                      display: 'flex',\n                      flexDirection: 'row',\n                    }}\n                  >\n                    <Box\n                      style={{\n                        justifyContent: 'left',\n                        display: 'flex',\n                        flexDirection: 'row',\n                      }}\n                    >\n                      <Typography gutterBottom variant='h6' component='div'>\n                        {index + 1}.\n                      </Typography>\n                      <Typography variant='h6'>{track.title}</Typography>\n                    </Box>\n                    <Typography variant='h6' color='text.secondary'>\n                      {track.duration}\n                    </Typography>\n                  </Box>\n                );\n              })}\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography style={{ color: 'blue', fontSize: 20 }}>\n                Albums\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            {tracklist &&\n              tracklist.map((track, index) => {\n                return (\n                  <Grid key={track.id} item xs={12} md={2}>\n                    <Card sx={{ maxWidth: 400 }}>\n                      <CardActionArea>\n                        <CardMedia\n                          component='img'\n                          height='140'\n                          image={track.album.cover}\n                          alt='green iguana'\n                        />\n                        <CardContent>\n                          <Box>\n                            <Typography\n                              gutterBottom\n                              variant='h6'\n                              component='div'\n                              style={{\n                                width: '200px',\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                              }}\n                            >\n                              {track.album.title}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              {albumData && albumData.release_date\n                                ? albumData.release_date.substring(0, 4)\n                                : 'no date'}\n                            </Typography>\n                          </Box>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </div>\n      <Button onClick={onClose} style={{ color: 'blue', fontSize: 25 }} mt={5}>\n        Close\n      </Button>\n    </Dialog>\n  );\n};\n\nexport default Details;\n","import React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Details from '../details/Details';\n\nconst CardTemplate = ({ item }) => {\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n  useEffect(() => {}, [item]);\n\n  return (\n    <>\n      <Card\n        sx={{ maxWidth: 345 }}\n        onClick={() => {\n          setOpenDetails(true);\n        }}\n      >\n        {item ? (\n          <CardActionArea>\n            <CardMedia\n              component='img'\n              height='140'\n              image={item.artist.picture}\n              alt='green iguana'\n            />\n            <CardContent>\n              <Box\n                style={{\n                  justifyContent: 'space-between',\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <Typography gutterBottom variant='h5' component='div'>\n                  Artist\n                </Typography>\n                <Typography\n                  variant='body2'\n                  color='text.secondary'\n                  style={{\n                    width: '200px',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                  }}\n                >\n                  {item.artist.name}\n                </Typography>\n              </Box>\n              <Box\n                style={{\n                  justifyContent: 'space-between',\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <Typography gutterBottom variant='h5' component='div'>\n                  Fans\n                </Typography>\n                <Typography variant='body2' color='text.secondary'>\n                  {item.rank > 1000\n                    ? item.rank\n                        .toString()\n                        .substring(0, item.rank.toString().length - 3) + 'K'\n                    : item.rank}\n                </Typography>\n              </Box>\n            </CardContent>\n          </CardActionArea>\n        ) : null}\n      </Card>\n      <Details open={openDetails} onClose={handleCloseDetails} data={item} />\n    </>\n  );\n};\n\nexport default CardTemplate;\n","import { createContext } from 'react';\n\nexport const artistContext = createContext({});\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\n\nconst LoadingSpinner = () => {\n    return (\n    <Container maxWidth='md'>\n      <div className='wait-container'>\n        <svg width='48px' height='48px' viewBox='0 0 128 128'>\n          <g>\n            <linearGradient id='linear-gradient'>\n              <stop offset='0%' stop-color='#ffffff' />\n              <stop offset='100%' stop-color='#22305f' />\n            </linearGradient>\n            <path\n              d='M63.85 0A63.85 63.85 0 1 1 0 63.85 63.85 63.85 0 0 1 63.85 0zm.65 19.5a44 44 0 1 1-44 44 44 44 0 0 1 44-44z'\n              fill='url(#linear-gradient)'\n              fill-rule='evenodd'\n            />\n            <animateTransform\n              attributeName='transform'\n              type='rotate'\n              from='0 64 64'\n              to='360 64 64'\n              dur='1080ms'\n              repeatCount='indefinite'\n            ></animateTransform>\n          </g>\n        </svg>\n      </div>\n    </Container>\n    )\n}\n\nexport default LoadingSpinner\n","import React, { useContext, useEffect, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment } from '@mui/material';\nimport { artistContext } from '../../context/Context';\nimport LoadingSpinner from '../../spinner/LoadingSpinner'\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState('');\n  const [loading,setLoading] = useState(false)\n\n  const { setArtist } = useContext(artistContext);\n  const handleTextChange = (event) => {\n    setSearchText(event.target.value);\n  };\n  const handleSearch = async () => {\n    setLoading(true)\n    try {\n      const response = fetch(\n        'https://cors-anywhere.herokuapp.com/https://api.deezer.com/search?q=' +\n          searchText,\n        {\n          method: 'get',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const result = await (await response).json();\n      setArtist(result.data);\n      setLoading(false)\n    } catch (err) {\n      setLoading(false)\n      console.log(err);\n    }\n  };\n  useEffect(() => {}, []);\n  return (\n    <div>\n      <TextField\n        id='filled-search'\n        label='Search artist'\n        type='search'\n        variant='outlined'\n        placeholder='type artist and click search icon'\n        value={searchText}\n        onChange={handleTextChange}\n        fullWidth\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position='start'>\n              <SearchIcon\n                style={{ cursor: 'pointer' }}\n                onClick={handleSearch}\n              />\n            </InputAdornment>\n          ),\n        }}\n      />\n      {\n        loading?( \n          <LoadingSpinner />\n        ):null\n      }\n    </div>\n  );\n};\n\nexport default Search;\n","import Header from './components/header/Header';\nimport CardTemplate from './components/cardTemplate/CardTemplate';\nimport Search from './components/search/Search';\nimport Grid from '@mui/material/Grid';\nimport { artistContext } from './context/Context';\nimport { useState } from 'react';\n\nfunction App() {\n  const [artist, setArtist] = useState([]);\n  return (\n    <artistContext.Provider value={{ artist, setArtist }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Header />\n        </Grid>\n      </Grid>\n      <div\n        style={{\n          width: '80%',\n          marginLeft: '10%',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Grid container spacing={2} mt={1}>\n          <Grid item xs={8} md={8}>\n            <Search />\n          </Grid>\n          <Grid item xs={2} md={8}></Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n        <Grid container spacing={2} mt={1}>\n          {artist && artist.length > 0\n            ? artist.slice(0, 5).map((item) => {\n                return (\n                  <Grid item xs={12} md={2}>\n                    <CardTemplate item={item} />\n                  </Grid>\n                );\n              })\n            : null}\n        </Grid>\n      </div>\n    </artistContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}